extends ../layoutsimple

block content
  .container(style='margin-top:30px;')
    #peersCount
    #ethaccount(data-value=ethaddress)
    div(style='background-color:#111;border-radius:15px;padding:30px;width:100%;margin-bottom:15px;text-align:center;')
      #loader Connecting...Please wait...  
        span#connectdot
    #messagehodler(style='background-color:#111;border-radius:15px;padding:30px;width:100%;height:550px;overflow-y: scroll;margin-bottom:15px;')
      #messages
    .input-group
      input.blackinputchat#message.form-control(type='text' placeholder='Type a message...', data-value=ethaddress)
      span#send.input-group-addon(style='background-color:#222;color:#999;border-color: #444;border-top-right-radius:15px;border-bottom-right-radius:15px;outline:none;')
        i.far.fa-paper-plane
    script(src='https://chr15m.github.io/bugout/bugout.min.js')
    script(src='https://unpkg.com/3box/dist/3box.min.js')
    script.
      var b = Bugout("Kronos");
      console.log(b.address() + " [ me ]");

      //localStorage.debug = false;

      var ethaddy = document.getElementById("ethaccount").getAttribute("data-value");

      console.log(ethaddy);

      const ThreeBoxProfile = async () => {

        const profile = await Box.getProfile(ethaddy);
        var profileimage;

        if (typeof profile.image == 'undefined') {
            profileimage = profile.image;
            console.log(profileimage);
            var boximage = '';
            if (typeof profileimage == 'undefined') {
                boximage = '../img/avatar.png'; //IPFS Default Avatar Hash
            } else {
                profileimage = profile.image[0].contentUrl['/'];
                boximage = 'https://cloudflare-ipfs.com/ipfs/' + profileimage;
            }
            console.log(boximage);

            return boximage;

        } else {
            profileimage = profile.image[0].contentUrl['/'];
            console.log(profileimage);
            var boximage = '';
            if (typeof profileimage == 'undefined') {
                boximage = '../img/avatar.png'; //IPFS Default Avatar Hash
            } else {
                profileimage = profile.image[0].contentUrl['/'];
                boximage = 'https://cloudflare-ipfs.com/ipfs/' + profileimage;
            }
            console.log(boximage);

            return boximage;
        }
      }

      let promises = [];
      let ethereumarray = [];
      promises.push(new Promise((res, rej) => {
        ThreeBoxProfile().then(threeboxprofile => {

          ethereumarray.push({boxprofile: threeboxprofile});
          res({threeboxprofile});

          });
      }));
            
      Promise.all(promises).then((values) => {

        var boxprofile = ethereumarray[0].boxprofile;

        //console.log(boxprofile);

        document.getElementById("message").onkeydown = function(e){
          if(e.keyCode == 13){
            e.preventDefault();
            var messages = [];
            var txt = $("#message").val().replace(/</g, "&lt;").replace(/>/g, "&gt;");;
            if (txt == '') {
              return;
            }
            messages.push({msg: txt, address: ethaddy, boxprofile: boxprofile});
            b.send(messages);
            $('#message').val('');
          }
        };

        document.getElementById("send").onmousedown = function(e){
          e.preventDefault();
          var messages = [];
          var txt = $("#message").val().replace(/</g, "&lt;").replace(/>/g, "&gt;");;
          if (txt == '') {
              return;
          }
          messages.push({msg: txt, address: ethaddy, boxprofile: boxprofile});
          b.send(messages);
          $('#message').val('');
        };

      });

      b.on("seen", function(address) { 
        console.log(address + " [ seen ]");
        $('#loader').html("Kronos Chat Peer ID: " + b.address() + " <span class='dot'></span> • CONNECTED <span id='connectdot'></div>");
        b.on("connections", function(connection) { 
          console.log(connection + " [ connections ]");
          $('#connectdot').html(' • '+connection + ' connection(s)');
        });
      });

      b.on("message", function(address, message) {
        console.log("RECEIVED MESSAGE:" + address + ": " + message);
        $('#messages').append("<div style='font-size:13px;color:#999;margin-top:10px !important; background-color:#22222296;border-radius:15px;padding:10px;' class='row'><div class='col-md-1'><img src="+message[0].boxprofile+" border='0' style='display:inline-block;height:40px;width:40px;border-radius:9999px;object-fit:cover;margin-right: 15px;margin-top: 5px;'/></div><div class='col-md-11' style='display:inline-block;vertical-align:middle;'><span style='margin-top:15px;'>Peer: "+address+"<br/>From: "+message[0].address+"</span><br/><span style='font-size:16px;color:#FFF;'>"+message[0].msg+"</span></div></div>");
      });

      b.on("connections", console.log.bind(console, "Connections:"));
      b.on("seen", console.log.bind(console, "Seen:"));

      //- var objDiv = document.getElementById("messagehodler");
      //- objDiv.scrollTop = objDiv.scrollHeight;

      window.setInterval(function() {
        var elem = document.getElementById('messagehodler');
        elem.scrollTop = elem.scrollHeight;
      }, 300);
